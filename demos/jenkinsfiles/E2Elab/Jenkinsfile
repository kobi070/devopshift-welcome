pipeline {
    agent any

    // Define environment variables
    environment {
        PYTHON_VERSIONS = ["python:latest", "python:3.8-slim"] // TIP: Define an array for the Python docker image tag versions for testing and building (ex. 3.3 â€¦)
        DOCKERHUB_CREDENTIALS = 'dockerhub-credentials' // TIP: Add DockerHub credentials in Jenkins and reference them here
        REPO_NAME =  // TIP: Replace with your DockerHub repository name
    }

    stages {
        stage('Install Dependencies') {
            agent {
                docker {
                    image '?' // TIP: Use a Python image for installing dependencies or use the matrix
                    args '?' // TIP: Mount the pip cache for reuse in future stages (pip folder is: $HOME/.cache/pip:/root/.cache/pip')
                }
            }
            steps {
                // TIP: Run a command to install the python faker library here ( pip instal ...)
            }
        }

        stage('Test Application') {
            matrix {
                axes {
                    axis {
                        name '?' // TIP: Name your axis to reference the Python version
                        values '?' // TIP: OPTIONAL Use the environment variable for versions by force / override definitions  here
                    }
                }
                stages {
                    stage('Run Test') {
                        agent {
                            docker {
                                image '?' // TIP: Dynamically select the Python version from the matrix
                                reuseNode true // TIP: Reuse the workspace for Docker containers
                            }
                        }
                        steps {
                            sh 'python app.py'      // TIP: Runs the Python script here and validate its output (expecting exit code 0 )
                        }
                    }
                }
            }
        }

        stage('Build Docker Images') {
            matrix {
                axes {
                    axis {
                        name '?' // TIP: Name your axis to reference the Python version
                        values '?' // TIP: Use the environment variable for versions or define it here
                    }
                }
                stages {
                    stage('Build Image') {
                        steps {
                            // TIP: Use docker.build with build arguments to build an image for the Python version
                        }
                    }
                }
            }
        }

        stage('Push to DockerHub') {
            matrix {
                axes {
                    axis {
                        name '?' // TIP: Name your axis to reference the Python version
                        values '?' // TIP: Use the environment variable for versions or define it here
                    }
                }
                stages {
                    stage('Push Image') {
                        steps {
                            // TIP: Use docker.withRegistry to authenticate and push the image to DockerHub
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            // TIP: Add cleanup steps here if necessary
        }
    }
}